// Code generated by protoc-gen-go. DO NOT EDIT.
// source: book.proto

package book

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IdReq struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IdReq) Reset()         { *m = IdReq{} }
func (m *IdReq) String() string { return proto.CompactTextString(m) }
func (*IdReq) ProtoMessage()    {}
func (*IdReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e89d0eaa98dc5d8, []int{0}
}

func (m *IdReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdReq.Unmarshal(m, b)
}
func (m *IdReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdReq.Marshal(b, m, deterministic)
}
func (m *IdReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdReq.Merge(m, src)
}
func (m *IdReq) XXX_Size() int {
	return xxx_messageInfo_IdReq.Size(m)
}
func (m *IdReq) XXX_DiscardUnknown() {
	xxx_messageInfo_IdReq.DiscardUnknown(m)
}

var xxx_messageInfo_IdReq proto.InternalMessageInfo

func (m *IdReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type BookInfoReply struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BookName             string   `protobuf:"bytes,2,opt,name=book_name,json=bookName,proto3" json:"book_name,omitempty"`
	Price                float64  `protobuf:"fixed64,3,opt,name=price,proto3" json:"price,omitempty"`
	Author               string   `protobuf:"bytes,4,opt,name=author,proto3" json:"author,omitempty"`
	PublishTime          int64    `protobuf:"varint,5,opt,name=publish_time,json=publishTime,proto3" json:"publish_time,omitempty"`
	Desc                 string   `protobuf:"bytes,6,opt,name=desc,proto3" json:"desc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BookInfoReply) Reset()         { *m = BookInfoReply{} }
func (m *BookInfoReply) String() string { return proto.CompactTextString(m) }
func (*BookInfoReply) ProtoMessage()    {}
func (*BookInfoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e89d0eaa98dc5d8, []int{1}
}

func (m *BookInfoReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BookInfoReply.Unmarshal(m, b)
}
func (m *BookInfoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BookInfoReply.Marshal(b, m, deterministic)
}
func (m *BookInfoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BookInfoReply.Merge(m, src)
}
func (m *BookInfoReply) XXX_Size() int {
	return xxx_messageInfo_BookInfoReply.Size(m)
}
func (m *BookInfoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BookInfoReply.DiscardUnknown(m)
}

var xxx_messageInfo_BookInfoReply proto.InternalMessageInfo

func (m *BookInfoReply) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *BookInfoReply) GetBookName() string {
	if m != nil {
		return m.BookName
	}
	return ""
}

func (m *BookInfoReply) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *BookInfoReply) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *BookInfoReply) GetPublishTime() int64 {
	if m != nil {
		return m.PublishTime
	}
	return 0
}

func (m *BookInfoReply) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

type IdsReq struct {
	Ids                  string   `protobuf:"bytes,1,opt,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IdsReq) Reset()         { *m = IdsReq{} }
func (m *IdsReq) String() string { return proto.CompactTextString(m) }
func (*IdsReq) ProtoMessage()    {}
func (*IdsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e89d0eaa98dc5d8, []int{2}
}

func (m *IdsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdsReq.Unmarshal(m, b)
}
func (m *IdsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdsReq.Marshal(b, m, deterministic)
}
func (m *IdsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdsReq.Merge(m, src)
}
func (m *IdsReq) XXX_Size() int {
	return xxx_messageInfo_IdsReq.Size(m)
}
func (m *IdsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_IdsReq.DiscardUnknown(m)
}

var xxx_messageInfo_IdsReq proto.InternalMessageInfo

func (m *IdsReq) GetIds() string {
	if m != nil {
		return m.Ids
	}
	return ""
}

type BookInfosReply struct {
	Code                 int64            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 []*BookInfoReply `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *BookInfosReply) Reset()         { *m = BookInfosReply{} }
func (m *BookInfosReply) String() string { return proto.CompactTextString(m) }
func (*BookInfosReply) ProtoMessage()    {}
func (*BookInfosReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e89d0eaa98dc5d8, []int{3}
}

func (m *BookInfosReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BookInfosReply.Unmarshal(m, b)
}
func (m *BookInfosReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BookInfosReply.Marshal(b, m, deterministic)
}
func (m *BookInfosReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BookInfosReply.Merge(m, src)
}
func (m *BookInfosReply) XXX_Size() int {
	return xxx_messageInfo_BookInfosReply.Size(m)
}
func (m *BookInfosReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BookInfosReply.DiscardUnknown(m)
}

var xxx_messageInfo_BookInfosReply proto.InternalMessageInfo

func (m *BookInfosReply) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *BookInfosReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *BookInfosReply) GetData() []*BookInfoReply {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*IdReq)(nil), "book.IdReq")
	proto.RegisterType((*BookInfoReply)(nil), "book.BookInfoReply")
	proto.RegisterType((*IdsReq)(nil), "book.IdsReq")
	proto.RegisterType((*BookInfosReply)(nil), "book.BookInfosReply")
}

func init() { proto.RegisterFile("book.proto", fileDescriptor_1e89d0eaa98dc5d8) }

var fileDescriptor_1e89d0eaa98dc5d8 = []byte{
	// 306 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0xb1, 0x6e, 0xf2, 0x30,
	0x14, 0x85, 0x65, 0x62, 0x02, 0x5c, 0xf8, 0xd1, 0xaf, 0x5b, 0xd4, 0x5a, 0x74, 0x49, 0xb3, 0x34,
	0x52, 0x25, 0x06, 0xfa, 0x06, 0x5d, 0x2a, 0x96, 0x0e, 0x56, 0x77, 0x64, 0xf0, 0x2d, 0x58, 0x10,
	0x9c, 0xc6, 0x66, 0xe8, 0x43, 0xf4, 0x21, 0xfa, 0xa6, 0x95, 0x9d, 0x64, 0xa0, 0xea, 0xd0, 0xed,
	0x5c, 0xeb, 0xbb, 0x37, 0xe7, 0x9c, 0x00, 0x6c, 0xac, 0x3d, 0x2c, 0xaa, 0xda, 0x7a, 0x8b, 0x3c,
	0xe8, 0xfc, 0x06, 0xfa, 0x2b, 0x2d, 0xe9, 0x1d, 0xa7, 0xd0, 0x33, 0x5a, 0xb0, 0x8c, 0x15, 0x89,
	0xec, 0x19, 0x9d, 0x7f, 0x31, 0xf8, 0xf7, 0x64, 0xed, 0x61, 0x75, 0x7a, 0xb3, 0x92, 0xaa, 0xe3,
	0xc7, 0x4f, 0x02, 0x6f, 0x61, 0x14, 0x4e, 0xac, 0x4f, 0xaa, 0x24, 0xd1, 0xcb, 0x58, 0x31, 0x92,
	0xc3, 0xf0, 0xf0, 0xa2, 0x4a, 0xc2, 0x19, 0xf4, 0xab, 0xda, 0x6c, 0x49, 0x24, 0x19, 0x2b, 0x98,
	0x6c, 0x06, 0xbc, 0x86, 0x54, 0x9d, 0xfd, 0xde, 0xd6, 0x82, 0x47, 0xbe, 0x9d, 0xf0, 0x0e, 0x26,
	0xd5, 0x79, 0x73, 0x34, 0x6e, 0xbf, 0xf6, 0xa6, 0x24, 0xd1, 0x8f, 0x1f, 0x19, 0xb7, 0x6f, 0xaf,
	0xa6, 0x24, 0x44, 0xe0, 0x9a, 0xdc, 0x56, 0xa4, 0x71, 0x31, 0xea, 0x7c, 0x0e, 0xe9, 0x4a, 0xbb,
	0xe0, 0xfe, 0x3f, 0x24, 0x46, 0xbb, 0x68, 0x6e, 0x24, 0x83, 0xcc, 0x77, 0x30, 0xed, 0xec, 0xbb,
	0xc6, 0x3f, 0x02, 0xdf, 0x5a, 0x4d, 0x6d, 0x82, 0xa8, 0x51, 0xc0, 0xa0, 0x24, 0xe7, 0xd4, 0xae,
	0x4b, 0xd0, 0x8d, 0x78, 0x0f, 0x5c, 0x2b, 0xaf, 0x44, 0x92, 0x25, 0xc5, 0x78, 0x79, 0xb5, 0x88,
	0xcd, 0x5d, 0x14, 0x22, 0x23, 0xb0, 0xfc, 0x64, 0x10, 0xab, 0xc4, 0x07, 0x18, 0xec, 0xc8, 0x07,
	0x04, 0xc7, 0x0d, 0x1e, 0x9b, 0x9d, 0xff, 0xb6, 0x8b, 0x05, 0x70, 0x4f, 0xce, 0xff, 0x81, 0x5c,
	0xc0, 0xf0, 0xb9, 0x39, 0xeb, 0x70, 0xd2, 0xd1, 0x21, 0xf4, 0x7c, 0x76, 0x89, 0x37, 0x31, 0x37,
	0x69, 0xfc, 0xbd, 0x8f, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xcd, 0xbe, 0x20, 0x27, 0xec, 0x01,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BookClient is the client API for Book service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BookClient interface {
	GetBook(ctx context.Context, in *IdReq, opts ...grpc.CallOption) (*BookInfoReply, error)
	Test(ctx context.Context, in *IdReq, opts ...grpc.CallOption) (*BookInfoReply, error)
	GetBooks(ctx context.Context, in *IdsReq, opts ...grpc.CallOption) (*BookInfosReply, error)
}

type bookClient struct {
	cc *grpc.ClientConn
}

func NewBookClient(cc *grpc.ClientConn) BookClient {
	return &bookClient{cc}
}

func (c *bookClient) GetBook(ctx context.Context, in *IdReq, opts ...grpc.CallOption) (*BookInfoReply, error) {
	out := new(BookInfoReply)
	err := c.cc.Invoke(ctx, "/book.book/getBook", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookClient) Test(ctx context.Context, in *IdReq, opts ...grpc.CallOption) (*BookInfoReply, error) {
	out := new(BookInfoReply)
	err := c.cc.Invoke(ctx, "/book.book/test", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookClient) GetBooks(ctx context.Context, in *IdsReq, opts ...grpc.CallOption) (*BookInfosReply, error) {
	out := new(BookInfosReply)
	err := c.cc.Invoke(ctx, "/book.book/GetBooks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BookServer is the server API for Book service.
type BookServer interface {
	GetBook(context.Context, *IdReq) (*BookInfoReply, error)
	Test(context.Context, *IdReq) (*BookInfoReply, error)
	GetBooks(context.Context, *IdsReq) (*BookInfosReply, error)
}

// UnimplementedBookServer can be embedded to have forward compatible implementations.
type UnimplementedBookServer struct {
}

func (*UnimplementedBookServer) GetBook(ctx context.Context, req *IdReq) (*BookInfoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBook not implemented")
}
func (*UnimplementedBookServer) Test(ctx context.Context, req *IdReq) (*BookInfoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Test not implemented")
}
func (*UnimplementedBookServer) GetBooks(ctx context.Context, req *IdsReq) (*BookInfosReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBooks not implemented")
}

func RegisterBookServer(s *grpc.Server, srv BookServer) {
	s.RegisterService(&_Book_serviceDesc, srv)
}

func _Book_GetBook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookServer).GetBook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/book.book/GetBook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookServer).GetBook(ctx, req.(*IdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Book_Test_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookServer).Test(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/book.book/Test",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookServer).Test(ctx, req.(*IdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Book_GetBooks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookServer).GetBooks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/book.book/GetBooks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookServer).GetBooks(ctx, req.(*IdsReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Book_serviceDesc = grpc.ServiceDesc{
	ServiceName: "book.book",
	HandlerType: (*BookServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getBook",
			Handler:    _Book_GetBook_Handler,
		},
		{
			MethodName: "test",
			Handler:    _Book_Test_Handler,
		},
		{
			MethodName: "GetBooks",
			Handler:    _Book_GetBooks_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "book.proto",
}
