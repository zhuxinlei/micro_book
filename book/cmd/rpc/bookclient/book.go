// Code generated by goctl. DO NOT EDIT!
// Source: book.proto

//go:generate mockgen -destination ./book_mock.go -package bookclient -source $GOFILE

package bookclient

import (
	"context"

	"github.com/zhuxinlei/micro_book/book/cmd/rpc/book"

	"github.com/tal-tech/go-zero/zrpc"
)

type (
	IdReq         = book.IdReq
	BookInfoReply = book.BookInfoReply

	Book interface {
		GetBook(ctx context.Context, in *IdReq) (*BookInfoReply, error)
		Test(ctx context.Context, in *IdReq) (*BookInfoReply, error)
	}

	defaultBook struct {
		cli zrpc.Client
	}
)

func NewBook(cli zrpc.Client) Book {
	return &defaultBook{
		cli: cli,
	}
}

func (m *defaultBook) GetBook(ctx context.Context, in *IdReq) (*BookInfoReply, error) {
	client := book.NewBookClient(m.cli.Conn())
	return client.GetBook(ctx, in)
}

func (m *defaultBook) Test(ctx context.Context, in *IdReq) (*BookInfoReply, error) {
	client := book.NewBookClient(m.cli.Conn())
	return client.Test(ctx, in)
}
